<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easytoolsoft.easyreport.domain.sys.dao.IEventDao">
    <!-- CodeBuilder  Generated-->
    <resultMap id="EventMap" type="com.easytoolsoft.easyreport.domain.sys.po.Event">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="VARCHAR"/>
        <result column="message" property="message" jdbcType="LONGVARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause1">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Example_Where_Clause2">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List_Without_Id">
  	  source ,user_id ,account ,level ,message ,url ,gmt_created
     </sql>
    <sql id="Base_Column_List">
        id ,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="source != null">source,</if>
        <if test="userId != null">user_id,</if>
        <if test="account != null">account,</if>
        <if test="level != null">level,</if>
        <if test="message != null">message,</if>
        <if test="url != null">url,</if>
        <if test="gmtCreated != null">gmt_created,</if>
    </sql>
    <sql id="Insert_Values">
        <if test="source != null">#{source,jdbcType=VARCHAR},</if>
        <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
        <if test="account != null">#{account,jdbcType=VARCHAR},</if>
        <if test="level != null">#{level,jdbcType=VARCHAR},</if>
        <if test="message != null">#{message,jdbcType=LONGVARCHAR},</if>
        <if test="url != null">#{url,jdbcType=VARCHAR},</if>
        <if test="gmtCreated != null">#{gmtCreated,jdbcType=TIMESTAMP},</if>
    </sql>
    <sql id="Batch_Insert_Values">
			 #{item.source,jdbcType=VARCHAR},
			 #{item.userId,jdbcType=INTEGER},
			 #{item.account,jdbcType=VARCHAR},
			 #{item.level,jdbcType=VARCHAR},
			 #{item.message,jdbcType=LONGVARCHAR},
			 #{item.url,jdbcType=VARCHAR},
			 #{item.gmtCreated,jdbcType=TIMESTAMP}
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="source != null">source = #{source,jdbcType=VARCHAR} ,</if>
        <if test="userId != null">user_id = #{userId,jdbcType=INTEGER} ,</if>
        <if test="account != null">account = #{account,jdbcType=VARCHAR} ,</if>
        <if test="level != null">level = #{level,jdbcType=VARCHAR} ,</if>
        <if test="message != null">message = #{message,jdbcType=LONGVARCHAR} ,</if>
        <if test="url != null">url = #{url,jdbcType=VARCHAR} ,</if>
        <if test="gmtCreated != null">gmt_created = #{gmtCreated,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <sql id="Update_Set_From_Map">
        <if test="record.source != null">source = #{set.source,jdbcType=VARCHAR} ,</if>
        <if test="record.userId != null">user_id = #{set.userId,jdbcType=INTEGER} ,</if>
        <if test="record.account != null">account = #{set.account,jdbcType=VARCHAR} ,</if>
        <if test="record.level != null">level = #{set.level,jdbcType=VARCHAR} ,</if>
        <if test="record.message != null">message = #{set.message,jdbcType=LONGVARCHAR} ,</if>
        <if test="record.url != null">url = #{set.url,jdbcType=VARCHAR} ,</if>
        <if test="record.gmtCreated != null">gmt_created = #{set.gmtCreated,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <sql id="BatchUpdate_Set_From_Bean">
        ï»¿source = #{item.source,jdbcType=VARCHAR} ,
		user_id = #{item.userId,jdbcType=INTEGER} ,
		account = #{item.account,jdbcType=VARCHAR} ,
		level = #{item.level,jdbcType=VARCHAR} ,
		message = #{item.message,jdbcType=LONGVARCHAR} ,
		url = #{item.url,jdbcType=VARCHAR} ,
		gmt_created = #{item.gmtCreated,jdbcType=TIMESTAMP} 
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="com.easytoolsoft.easyreport.domain.sys.po.Event">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ezrpt_sys_event
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into ezrpt_sys_event
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from ezrpt_sys_event where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.easytoolsoft.easyreport.domain.sys.example.EventExample">
        delete from ezrpt_sys_event
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
    </delete>
    <delete id="deleteIn">
        delete from ezrpt_sys_event where id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="com.easytoolsoft.easyreport.domain.sys.po.Event">
        update ezrpt_sys_event
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="update" parameterType="java.util.Map">
        update ezrpt_sys_event
        <set>
            <include refid="Update_Set_From_Map"/>
        </set>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause2"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ezrpt_sys_event
            <include refid="BatchUpdate_Set_From_Bean"/>
            where id=#{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" resultMap="EventMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_sys_event
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByExample" resultMap="EventMap"
            parameterType="com.easytoolsoft.easyreport.domain.sys.example.EventExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ezrpt_sys_event
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="EventMap"
            parameterType="com.easytoolsoft.easyreport.domain.sys.example.EventExample">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_sys_event
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="EventMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_sys_event
        where id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </select>
    <select id="countByExample" resultType="java.lang.Integer"
            parameterType="com.easytoolsoft.easyreport.domain.sys.example.EventExample">
        select count(*) as total from ezrpt_sys_event
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
    </select>
    <select id="countByPager" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from ezrpt_sys_event
        <if test="example != null">
            <include refid="Example_Where_Clause2"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="EventMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_sys_event
        <if test="example != null">
            <include refid="Example_Where_Clause2"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != '' ">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>