<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easytoolsoft.easyreport.domain.schedule.dao.ITaskDao">
    <!-- CodeBuilder  Generated-->
    <resultMap id="TaskMap" type="com.easytoolsoft.easyreport.domain.schedule.po.Task">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="report_ids" property="reportIds" jdbcType="VARCHAR"/>
        <result column="cron_expr" property="cronExpr" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="options" property="options" jdbcType="LONGVARCHAR"/>
        <result column="template" property="template" jdbcType="LONGVARCHAR"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause1">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Example_Where_Clause2">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List_Without_Id">
  	   report_ids ,cron_expr ,type ,options ,template ,comment ,gmt_created ,gmt_modified 	  </sql>
    <sql id="Base_Column_List">
        id ,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="reportIds != null">report_ids,</if>
        <if test="cronExpr != null">cron_expr,</if>
        <if test="type != null">type,</if>
        <if test="options != null">options,</if>
        <if test="template != null">template,</if>
        <if test="comment != null">comment,</if>
        <if test="gmtCreated != null">gmt_created,</if>
        <if test="gmtModified != null">gmt_modified,</if>
    </sql>
    <sql id="Insert_Values">
        <if test="reportIds != null">#{reportIds,jdbcType=VARCHAR},</if>
        <if test="cronExpr != null">#{cronExpr,jdbcType=VARCHAR},</if>
        <if test="type != null">#{type,jdbcType=TINYINT},</if>
        <if test="options != null">#{options,jdbcType=LONGVARCHAR},</if>
        <if test="template != null">#{template,jdbcType=LONGVARCHAR},</if>
        <if test="comment != null">#{comment,jdbcType=VARCHAR},</if>
        <if test="gmtCreated != null">#{gmtCreated,jdbcType=TIMESTAMP},</if>
        <if test="gmtModified != null">#{gmtModified,jdbcType=TIMESTAMP},</if>
    </sql>
    <sql id="Batch_Insert_Values">
        #{item.reportIds,jdbcType=VARCHAR},
        #{item.cronExpr,jdbcType=VARCHAR},
        #{item.type,jdbcType=TINYINT},
        #{item.options,jdbcType=LONGVARCHAR},
        #{item.template,jdbcType=LONGVARCHAR},
        #{item.comment,jdbcType=VARCHAR},
        #{item.gmtCreated,jdbcType=TIMESTAMP},
        #{item.gmtModified,jdbcType=TIMESTAMP}
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="reportIds != null">report_ids = #{reportIds,jdbcType=VARCHAR} ,</if>
        <if test="cronExpr != null">cron_expr = #{cronExpr,jdbcType=VARCHAR} ,</if>
        <if test="type != null">type = #{type,jdbcType=TINYINT} ,</if>
        <if test="options != null">options = #{options,jdbcType=LONGVARCHAR} ,</if>
        <if test="template != null">template = #{template,jdbcType=LONGVARCHAR} ,</if>
        <if test="comment != null">comment = #{comment,jdbcType=VARCHAR} ,</if>
        <if test="gmtCreated != null">gmt_created = #{gmtCreated,jdbcType=TIMESTAMP} ,</if>
        <if test="gmtModified != null">gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <sql id="Update_Set_From_Map">
        <if test="record.reportIds != null">report_ids = #{set.reportIds,jdbcType=VARCHAR} ,</if>
        <if test="record.cronExpr != null">cron_expr = #{set.cronExpr,jdbcType=VARCHAR} ,</if>
        <if test="record.type != null">type = #{set.type,jdbcType=TINYINT} ,</if>
        <if test="record.options != null">options = #{set.options,jdbcType=LONGVARCHAR} ,</if>
        <if test="record.template != null">template = #{set.template,jdbcType=LONGVARCHAR} ,</if>
        <if test="record.comment != null">comment = #{set.comment,jdbcType=VARCHAR} ,</if>
        <if test="record.gmtCreated != null">gmt_created = #{set.gmtCreated,jdbcType=TIMESTAMP} ,</if>
        <if test="record.gmtModified != null">gmt_modified = #{set.gmtModified,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <sql id="BatchUpdate_Set_From_Bean">
        ï»¿report_ids = #{item.reportIds,jdbcType=VARCHAR} ,
        cron_expr = #{item.cronExpr,jdbcType=VARCHAR} ,
        type = #{item.type,jdbcType=TINYINT} ,
        options = #{item.options,jdbcType=LONGVARCHAR} ,
        template = #{item.template,jdbcType=LONGVARCHAR} ,
        comment = #{item.comment,jdbcType=VARCHAR} ,
        gmt_created = #{item.gmtCreated,jdbcType=TIMESTAMP} ,
        gmt_modified = #{item.gmtModified,jdbcType=TIMESTAMP}
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="com.easytoolsoft.easyreport.domain.schedule.po.Task">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ezrpt_schedule_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into ezrpt_schedule_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from ezrpt_schedule_task where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.easytoolsoft.easyreport.domain.schedule.example.TaskExample">
        delete from ezrpt_schedule_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
    </delete>
    <delete id="deleteIn">
        delete from ezrpt_schedule_task where id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="com.easytoolsoft.easyreport.domain.schedule.po.Task">
        update ezrpt_schedule_task
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="update" parameterType="java.util.Map">
        update ezrpt_schedule_task
        <set>
            <include refid="Update_Set_From_Map"/>
        </set>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause2"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ezrpt_schedule_task
            <include refid="BatchUpdate_Set_From_Bean"/>
            where id=#{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" resultMap="TaskMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_schedule_task
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByExample" resultMap="TaskMap"
            parameterType="com.easytoolsoft.easyreport.domain.schedule.example.TaskExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ezrpt_schedule_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="TaskMap"
            parameterType="com.easytoolsoft.easyreport.domain.schedule.example.TaskExample">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_schedule_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="TaskMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_schedule_task
        where id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </select>
    <select id="countByExample" resultType="java.lang.Integer"
            parameterType="com.easytoolsoft.easyreport.domain.schedule.example.TaskExample">
        select count(*) as total from ezrpt_schedule_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause1"/>
        </if>
    </select>
    <select id="countByPager" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from ezrpt_schedule_task
        <if test="example != null">
            <include refid="Example_Where_Clause2"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="TaskMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ezrpt_schedule_task
        <if test="example != null">
            <include refid="Example_Where_Clause2"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != '' ">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>